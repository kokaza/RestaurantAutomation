/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaraunt;

import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author dmhaffner
 */
public class CookOrderDetailsScreen extends javax.swing.JPanel {

    private CookUI cookUI;
    private Order currentOrder;
    /**
     * Creates new form CookOrderDetailsScreen
     */
    public CookOrderDetailsScreen(Order order, CookUI cookUI) {
        this.cookUI = cookUI;
        this.currentOrder = order;
        initComponents();
        initOrderDetails(order);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderDetailsLabel = new javax.swing.JLabel();
        orderDetailsScrollPane = new javax.swing.JScrollPane();
        orderDetailsList = new javax.swing.JList();
        backButton = new javax.swing.JButton();
        backButton1 = new javax.swing.JButton();

        orderDetailsLabel.setText("Order Details");

        orderDetailsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        orderDetailsScrollPane.setViewportView(orderDetailsList);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        backButton1.setText("Confirm");
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderDetailsScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orderDetailsLabel)
                        .addGap(0, 300, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(backButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderDetailsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderDetailsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(backButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        cookUI.showOrderQueueScreen();
    }//GEN-LAST:event_backButtonActionPerformed

    private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton backButton1;
    private javax.swing.JLabel orderDetailsLabel;
    private javax.swing.JList orderDetailsList;
    private javax.swing.JScrollPane orderDetailsScrollPane;
    // End of variables declaration//GEN-END:variables

    private void initOrderDetails(Order order) {
        javax.swing.DefaultListModel<String> listModel;
        listModel = new javax.swing.DefaultListModel<>();
        
        //listModel.addElement("test 1");
        //listModel.addElement("test 2");
        //listModel.addElement("test 3");
        
        for (OrderLineItem orderLineItem : order.getOrderLineItemList()) {
            listModel.addElement(orderLineItem.toString());
        }
        orderDetailsList.setModel(listModel);
        cookUI.pack();
    }
    
    public void populateOrderQueue(){
        DefaultListModel<OrderLineItem> listModel;
        ArrayList<OrderLineItem> temp = cookUI.getOrderLineItemList(currentOrder.getOrderID());
        
    }
}